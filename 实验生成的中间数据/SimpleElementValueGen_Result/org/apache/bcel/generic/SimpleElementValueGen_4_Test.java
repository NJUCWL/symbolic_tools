/*
 * This file was automatically generated by EvoSuite
 * Mon May 10 08:47:00 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.SimpleElementValueGen;

public class SimpleElementValueGen_4_Test {

  //Covered goal: org.apache.bcel.generic.SimpleElementValueGen.dump(Ljava/io/DataOutputStream;)V: path condition EvoSuiteWrapper_4 (id = 0)

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = (-1289);
      Constant[] constantArray0 = new Constant[1];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      short short0 = (short) (-1458);
      SimpleElementValueGen simpleElementValueGen0 = new SimpleElementValueGen(int0, constantPoolGen0, short0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      int int1 = 2278;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, int1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        simpleElementValueGen0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SimpleElementValueGen doesnt know how to write out type -1289
         //
      }
  }
}
