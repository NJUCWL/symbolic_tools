/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 14:15:18 GMT 2021
 */

package org.apache.bcel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.bcel.Repository;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Repository_ESTest extends Repository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.classfile.ConstantUtf8$CACHE_HOLDER$1");
      assertEquals("java.util.LinkedHashMap", javaClass0.getSuperclassName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("java.lang.Byte");
      assertEquals(52, javaClass0.getMajor());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<String> class0 = String.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf(javaClass0, javaClass0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.Repository");
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass1 = syntheticRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf(javaClass1, javaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.Repository");
      boolean boolean0 = Repository.instanceOf(javaClass0, "org.apache.bcel.Repository");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<MockFileInputStream> class0 = MockFileInputStream.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf(javaClass0, "org.apache.bcel.Repository");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", javaClass0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.util.SyntheticRepository", "org.apache.bcel.Repository");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = Repository.implementationOf("java.io.Serializable", "java.io.Serializable");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      JavaClass[] javaClassArray0 = Repository.getSuperClasses(javaClass0);
      assertEquals(0, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaClass[] javaClassArray0 = Repository.getSuperClasses("org.apache.bcel.Repository");
      assertEquals(1, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      org.apache.bcel.util.Repository repository0 = Repository.getRepository();
      assertNull(repository0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      JavaClass[] javaClassArray0 = Repository.getInterfaces(javaClass0);
      assertEquals(0, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertEquals(33, javaClass1.getAccessFlags());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertEquals("java.util", javaClass1.getPackageName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertEquals(33, javaClass1.getAccessFlags());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.removeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.removeClass("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.lookupClassFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.lookupClass("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.lookupClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "org.apache.bcel.Repository";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classLoader0.setDefaultAssertionStatus(false);
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader1);
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      classLoader0.clearAssertionStatus();
      javaClass0.setModifiers(673);
      javaClass0.getSuperClasses();
      ClassLoader.getSystemClassLoader();
      Repository.implementationOf("org.apache.bcel.Repository", javaClass0);
      Repository.implementationOf(javaClass0, javaClass0);
      Repository.getInterfaces("org.apache.bcel.Repository");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Repository.lookupClassFile("");
      try { 
        Repository.lookupClass("Signature: ");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class Signature: : org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: Signature: .class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.lookupClass((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf((JavaClass) null, "org.apache.bcel.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      try { 
        Repository.instanceOf(javaClass0, ": dw^TBP}?NOBU}v");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class : dw^TBP}?NOBU}v: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: : dw^TBP}?NOBU}v.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((ClassLoader) null);
      Repository.setRepository(classLoaderRepository0);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.Repository");
      // Undeclared exception!
      try { 
        Repository.instanceOf("org.apache.bcel.Repository", javaClass0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ClassLoaderRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("K;KI*Cs");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      // Undeclared exception!
      try { 
        Repository.instanceOf("", javaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      try { 
        Repository.instanceOf("!QwJX-]JN\" Al", javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class !QwJX-]JN\" Al: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: !QwJX-]JN\" Al.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        Repository.instanceOf("w", "w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      try { 
        Repository.instanceOf("Frym\tTo\tHandler\tTpe\n", "53J,");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class Frym\tTo\tHandler\tTpe
         // : org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: Frym\tTo\tHandler\tTpe
         // .class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      boolean boolean0 = true;
      javaClass0.isFinal(true);
      javaClass0.setAccessFlags(3408);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "From\tTo\tHandler\tType\n";
      stringArray0[1] = "53J,";
      javaClass0.setInterfaceNames(stringArray0);
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      Repository.clearCache();
      // Undeclared exception!
      try { 
        Repository.implementationOf(javaClass0, javaClass1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.Object is no interface
         //
         verifyException("org.apache.bcel.classfile.JavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf((JavaClass) null, "org.apache.bcel.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf((JavaClass) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf("org.apache.bcel.classfile.ConstantUtf8$CACHE_HOLDER$1", (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.JavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      try { 
        Repository.implementationOf("R^sK+BXni,$d", javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class R^sK+BXni,$d: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: R^sK+BXni,$d.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((ClassLoader) null);
      Repository.setRepository(classLoaderRepository0);
      // Undeclared exception!
      try { 
        Repository.implementationOf("", "org.apache.bcel.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ClassLoaderRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      try { 
        Repository.implementationOf("org.apache.bcel.classfile.ParameterAnnotations", "TAYPfl?U=QT_");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class TAYPfl?U=QT_: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: TAYPfl?U=QT_.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getSuperClasses((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getSuperClasses("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      javaClass0.setSuperclassNameIndex(3361);
      Repository.getInterfaces(javaClass0);
      Repository.getRepository();
      Repository.lookupClassFile("<aqC=&_rtAZ?k(zfUJ");
      try { 
        Repository.instanceOf("<aqC=&_rtAZ?k(zfUJ", javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class <aqC=&_rtAZ?k(zfUJ: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: <aqC=&_rtAZ?k(zfUJ.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getInterfaces((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Class<MockFileInputStream> class0 = MockFileInputStream.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getInterfaces(javaClass0);
      assertEquals(5, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "J|W)?w3j:<xJ6BkCYF";
      javaClass0.setInterfaceNames(stringArray0);
      try { 
        Repository.getInterfaces(javaClass0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class J|W)?w3j:<xJ6BkCYF: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: J|W)?w3j:<xJ6BkCYF.class
         //
         verifyException("org.apache.bcel.util.ClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((ClassLoader) null);
      Repository.setRepository(classLoaderRepository0);
      // Undeclared exception!
      try { 
        Repository.getInterfaces("org.apache.bcel.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ClassLoaderRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      try { 
        Repository.getInterfaces("SIR%aqNkM~T");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class SIR%aqNkM~T: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: SIR%aqNkM~T.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.addClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JavaClass javaClass0 = Repository.lookupClass("org.apache.bcel.Repository");
      JavaClass javaClass1 = Repository.addClass(javaClass0);
      assertFalse(javaClass1.isSynthetic());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      // Undeclared exception!
      try { 
        Repository.implementationOf("", javaClass0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.Repository");
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", javaClass0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      try { 
        Repository.implementationOf(javaClass0, "}vw#x");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class }vw#x: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: }vw#x.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.implementationOf("org.apache.bcel.Repository", "org.apache.bcel.Repository");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // org.apache.bcel.Repository is no interface
         //
         verifyException("org.apache.bcel.classfile.JavaClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      JavaClass[] javaClassArray0 = Repository.getSuperClasses(javaClass0);
      assertEquals(1, javaClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Class<String> class0 = String.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      Repository.removeClass(javaClass0);
      assertEquals("String.java", javaClass0.getSourceFileName());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = Repository.instanceOf("org.apache.bcel.Repository", "org.apache.bcel.Repository");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      try { 
        Repository.getSuperClasses("~r2`<V:7MmiO^Rv");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class ~r2`<V:7MmiO^Rv: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: ~r2`<V:7MmiO^Rv.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.getInterfaces("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        Repository.instanceOf((JavaClass) null, (JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = Repository.lookupClass(class0);
      // Undeclared exception!
      try { 
        Repository.instanceOf(javaClass0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }
}
