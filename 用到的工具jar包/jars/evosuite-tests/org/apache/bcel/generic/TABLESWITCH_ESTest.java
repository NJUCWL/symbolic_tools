/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 15:10:15 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TABLESWITCH_ESTest extends TABLESWITCH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[17];
      tABLESWITCH0.setPosition(1);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      tABLESWITCH0.initFromFile(byteSequence0, false);
      assertEquals(16, byteSequence0.getIndex());
      assertEquals(17, tABLESWITCH0.getLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[17];
      byteArray0[1] = (byte) (-68);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      tABLESWITCH0.initFromFile(byteSequence0, false);
      assertEquals(16, byteSequence0.getIndex());
      assertEquals(17, tABLESWITCH0.getLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[17];
      byteArray0[11] = (byte) (-68);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      try { 
        tABLESWITCH0.initFromFile(byteSequence0, false);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[9];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[9];
      InstructionList instructionList0 = new InstructionList();
      FCMPL fCMPL0 = new FCMPL();
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) fCMPL0);
      instructionHandle0.setPosition(53);
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandle0);
      tABLESWITCH0.updatePosition((-1230), 53);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("RJwRk7${UIG=V3", true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Target of tableswitch[170](50) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      // Undeclared exception!
      try { 
        tABLESWITCH0.initFromFile((ByteSequence) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[18];
      byteArray0[4] = (byte)4;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.TABLESWITCH", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      byte[] byteArray0 = new byte[18];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      byteSequence0.readUnsignedShort();
      try { 
        tABLESWITCH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        tABLESWITCH0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        tABLESWITCH0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[6];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[2];
      byte[] byteArray0 = new byte[0];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      DCONST dCONST0 = (DCONST)InstructionConstants.DCONST_0;
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) dCONST0);
      TABLESWITCH tABLESWITCH0 = null;
      try {
        tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Match and target array have not the same length: Match length: 6 Target length: 2
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[9];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[9];
      InstructionList instructionList0 = new InstructionList();
      FCMPL fCMPL0 = new FCMPL();
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) fCMPL0);
      instructionHandle0.setPosition(53);
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH(intArray0, instructionHandleArray0, instructionHandle0);
      tABLESWITCH0.setMatch_length((-1445));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("RJwRk7${UIG=V3", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      tABLESWITCH0.dump(dataOutputStream0);
      assertEquals(49, tABLESWITCH0.getLength());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TABLESWITCH tABLESWITCH0 = new TABLESWITCH();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        tABLESWITCH0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[3];
      FSUB fSUB0 = new FSUB();
      InstructionList instructionList0 = new InstructionList(fSUB0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) fSUB0);
      JSR_W jSR_W0 = new JSR_W(instructionHandle0);
      BranchHandle branchHandle0 = instructionList0.append(instructionHandle0, (BranchInstruction) jSR_W0);
      TABLESWITCH tABLESWITCH0 = null;
      try {
        tABLESWITCH0 = new TABLESWITCH(intArray0, (InstructionHandle[]) null, branchHandle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }
}
