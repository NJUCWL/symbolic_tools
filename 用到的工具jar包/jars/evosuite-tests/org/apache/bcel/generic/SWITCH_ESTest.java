/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 18:39:54 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.SWITCH;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SWITCH_ESTest extends SWITCH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[4] = 220;
      intArray0[2] = 2068;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[9];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null, 2068);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[3];
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH(intArray0, (InstructionHandle[]) null, (InstructionHandle) null, (-3546));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.SWITCH", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[4];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[2];
      INEG iNEG0 = new INEG();
      InstructionList instructionList0 = new InstructionList(iNEG0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0, 1026);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.bcel.generic.SWITCH", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH((int[]) null, (InstructionHandle[]) null, (InstructionHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.SWITCH", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[8];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[0];
      MONITORENTER mONITORENTER0 = (MONITORENTER)InstructionConstants.MONITORENTER;
      InstructionHandle instructionHandle0 = new InstructionHandle(mONITORENTER0);
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.bcel.generic.SWITCH", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = (-822);
      intArray0[3] = 2918;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[9];
      ISTORE iSTORE0 = (ISTORE)InstructionConstants.ISTORE_0;
      InstructionHandle instructionHandle0 = InstructionHandle.getInstructionHandle(iSTORE0);
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0, 227);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Match and target array have not the same length: Match length: 6 Target length: 9
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[0];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[0];
      InstructionList instructionList0 = new InstructionList();
      FALOAD fALOAD0 = new FALOAD();
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) fALOAD0);
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[8];
      byte[] byteArray0 = new byte[4];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      IFLE iFLE0 = new IFLE();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFLE0);
      int[] intArray0 = new int[4];
      intArray0[3] = 122;
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, branchHandle0, 122);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 617;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[2];
      DSTORE dSTORE0 = new DSTORE();
      InstructionHandle instructionHandle0 = InstructionHandle.getInstructionHandle(dSTORE0);
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandle0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[1];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[11];
      SWITCH sWITCH0 = null;
      try {
        sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, instructionHandleArray0[1]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Match and target array have not the same length: Match length: 1 Target length: 11
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[8];
      byte[] byteArray0 = new byte[4];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      IFLE iFLE0 = new IFLE();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFLE0);
      int[] intArray0 = new int[4];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, branchHandle0, 122);
      InstructionList instructionList1 = sWITCH0.getInstructionList();
      assertFalse(instructionList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[8];
      byte[] byteArray0 = new byte[4];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      IFLE iFLE0 = new IFLE();
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFLE0);
      int[] intArray0 = new int[4];
      SWITCH sWITCH0 = new SWITCH(intArray0, instructionHandleArray0, branchHandle0, 122);
      Instruction instruction0 = sWITCH0.getInstruction();
      assertEquals(29, instruction0.getLength());
  }
}
