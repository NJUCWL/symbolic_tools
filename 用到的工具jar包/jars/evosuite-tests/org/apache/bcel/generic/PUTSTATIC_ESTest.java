/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 15:07:10 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantClass;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PUTSTATIC_ESTest extends PUTSTATIC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        pUTSTATIC0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC();
      Constant[] constantArray0 = new Constant[4];
      ConstantClass constantClass0 = new ConstantClass(149);
      constantArray0[0] = (Constant) constantClass0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      // Undeclared exception!
      try { 
        pUTSTATIC0.consumeStack(constantPoolGen0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.classfile.ConstantClass cannot be cast to org.apache.bcel.classfile.ConstantCP
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Constant[] constantArray0 = new Constant[2];
      ConstantClass constantClass0 = new ConstantClass(0);
      constantArray0[0] = (Constant) constantClass0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      // Undeclared exception!
      try { 
        pUTSTATIC0.accept(instConstraintVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.classfile.ConstantClass cannot be cast to org.apache.bcel.classfile.ConstantCP
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC(1926);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        pUTSTATIC0.consumeStack(constantPoolGen0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 1926. Constant pool size is: 256
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      // Undeclared exception!
      try { 
        pUTSTATIC0.consumeStack(constantPoolGen0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = new PUTSTATIC();
      Class<?>[] classArray0 = pUTSTATIC0.getExceptions();
      assertEquals(4, classArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PUTSTATIC pUTSTATIC0 = null;
      try {
        pUTSTATIC0 = new PUTSTATIC((-1564));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -1564
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }
}
