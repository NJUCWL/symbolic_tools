/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 17:43:17 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SIPUSH_ESTest extends SIPUSH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      Frame frame0 = new Frame(2217, 2217);
      executionVisitor0.setFrame(frame0);
      sIPUSH0.accept(executionVisitor0);
      assertEquals((short) (-1), sIPUSH0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)230);
      String string0 = sIPUSH0.toString(true);
      assertEquals("sipush[17](3) 230", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      Number number0 = sIPUSH0.getValue();
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-1157));
      Number number0 = sIPUSH0.getValue();
      assertEquals((-1157), number0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short) (-1157));
      // Undeclared exception!
      try { 
        sIPUSH0.initFromFile((ByteSequence) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.SIPUSH", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      byte[] byteArray0 = new byte[1];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      try { 
        sIPUSH0.initFromFile(byteSequence0, true);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)2649);
      // Undeclared exception!
      try { 
        sIPUSH0.dump((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Instruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        sIPUSH0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        sIPUSH0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      // Undeclared exception!
      try { 
        sIPUSH0.toString(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)159);
      byte[] byteArray0 = new byte[9];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      sIPUSH0.initFromFile(byteSequence0, false);
      assertEquals(3, sIPUSH0.getLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        sIPUSH0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)159);
      Number number0 = sIPUSH0.getValue();
      assertEquals(159, number0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      sIPUSH0.dump(dataOutputStream0);
      assertEquals("\uFFFD\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SIPUSH sIPUSH0 = new SIPUSH((short)159);
      Type type0 = sIPUSH0.getType((ConstantPoolGen) null);
      assertEquals(1, type0.getSize());
  }
}
