/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 15:29:28 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.Repository;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ArrayType;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.ReferenceType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceType_ESTest extends ReferenceType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      ReferenceType referenceType0 = objectType0.NULL.getFirstCommonSuperclass((ReferenceType) null);
      assertNull(referenceType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      ReferenceType referenceType1 = referenceType0.firstCommonSuperclass((ReferenceType) null);
      assertNull(referenceType1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      Type type0 = aRETURN0.getType();
      ArrayType arrayType0 = new ArrayType(type0, 1);
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      Repository.setRepository(memorySensitiveClassPathRepository0);
      // Undeclared exception!
      try { 
        ((Type) ((org.apache.bcel.generic.Type) arrayType0).THROWABLE).STRINGBUFFER.isCastableTo(type0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("}B[ W=62PzZrZ4 n.");
      try { 
        objectType0.isCastableTo(objectType0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class }B[ W=62PzZrZ4 n.: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: }B[ W=62PzZrZ4 n/.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("", 202);
      Type type0 = arrayType0.getBasicType();
      // Undeclared exception!
      try { 
        arrayType0.THROWABLE.isAssignmentCompatibleWith(type0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("org.aache.bcel.generic.ReferenceType");
      try { 
        objectType0.isAssignmentCompatibleWith(((Type) ((org.apache.bcel.generic.Type) objectType0).VOID).OBJECT);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class org.aache.bcel.generic.ReferenceType: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: org/aache/bcel/generic/ReferenceType.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      // Undeclared exception!
      try { 
        objectType0.getFirstCommonSuperclass((ReferenceType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ObjectType objectType1 = ObjectType.getInstance("");
      // Undeclared exception!
      try { 
        objectType0.getFirstCommonSuperclass(objectType1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ObjectType objectType1 = ObjectType.getInstance("+?gPfo,)7?Xr8=e3m/|");
      try { 
        objectType0.getFirstCommonSuperclass(objectType1);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class +?gPfo,)7?Xr8=e3m.|: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: +?gPfo,)7?Xr8=e3m/|.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ObjectType objectType1 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.firstCommonSuperclass(objectType1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      ObjectType objectType1 = ObjectType.getInstance("+?gPfo,)7?Xr8=e3m/|");
      try { 
        objectType0.firstCommonSuperclass(objectType1);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class +?gPfo,)7?Xr8=e3m.|: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: +?gPfo,)7?Xr8=e3m/|.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      Type type0 = aRETURN0.getType();
      ArrayType arrayType0 = new ArrayType(type0, 1);
      Type type1 = arrayType0.getElementType();
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(type1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      Type type0 = aRETURN0.getType();
      ArrayType arrayType0 = new ArrayType(type0, 1);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(arrayType0.STRING);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("org.apache.bcel.generic.ReferenceType");
      ReferenceType referenceType0 = objectType0.getFirstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) objectType0).BYTE).OBJECT);
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(referenceType0);
      assertTrue(boolean0);
      assertEquals("Ljava/lang/Object;", referenceType0.getSignature());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ObjectType objectType1 = Type.OBJECT;
      boolean boolean0 = objectType1.isAssignmentCompatibleWith(objectType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReferenceType referenceType0 = Type.NULL;
      boolean boolean0 = referenceType0.isAssignmentCompatibleWith((Type) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        uninitializedObjectType0.firstCommonSuperclass(objectType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ObjectType objectType1 = Type.STRINGBUFFER;
      ReferenceType referenceType0 = objectType0.firstCommonSuperclass(objectType1);
      assertEquals("Ljava/lang/Object;", referenceType0.getSignature());
      assertNotNull(referenceType0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ObjectType objectType1 = (ObjectType)arrayType0.firstCommonSuperclass(objectType0);
      assertEquals("java.lang.Object", objectType1.getClassName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ReferenceType referenceType0 = objectType0.firstCommonSuperclass(objectType0);
      assertSame(referenceType0, objectType0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BasicType basicType0 = Type.CHAR;
      ArrayType arrayType0 = new ArrayType(basicType0, 1);
      ObjectType objectType0 = (ObjectType)basicType0.OBJECT.firstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) arrayType0).INT).NULL);
      assertEquals("java.lang.Object", objectType0.getClassName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ReferenceType referenceType0 = objectType0.firstCommonSuperclass(arrayType0);
      assertEquals("Ljava/lang/Object;", referenceType0.getSignature());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        objectType0.getFirstCommonSuperclass(uninitializedObjectType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        uninitializedObjectType0.getFirstCommonSuperclass(objectType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.bcel.verifier.structurals.UninitializedObjectType cannot be cast to org.apache.bcel.generic.ObjectType
         //
         verifyException("org.apache.bcel.generic.ReferenceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ReferenceType referenceType0 = objectType0.getFirstCommonSuperclass(arrayType0);
      assertEquals("Ljava/lang/Object;", referenceType0.getSignature());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      ObjectType objectType1 = (ObjectType)arrayType0.getFirstCommonSuperclass(objectType0);
      assertEquals("java.lang.Object", objectType1.getClassName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      ObjectType objectType1 = Type.STRINGBUFFER;
      ObjectType objectType2 = (ObjectType)objectType0.getFirstCommonSuperclass(objectType1);
      assertEquals("java.lang.Object", objectType2.getClassName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      Integer integer0 = new Integer(1);
      ArrayType arrayType0 = new ArrayType("lshl", 136);
      ArrayType arrayType1 = new ArrayType(objectType0, (int) integer0);
      ReferenceType referenceType0 = arrayType1.getFirstCommonSuperclass(arrayType0);
      assertEquals((byte)14, referenceType0.getType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("org.apache.bcel.generic.ReferenceType");
      ObjectType objectType1 = (ObjectType)((Type) ((org.apache.bcel.generic.Type) objectType0).BOOLEAN).STRING.getFirstCommonSuperclass(((Type) ((org.apache.bcel.generic.Type) objectType0).BOOLEAN).NULL);
      assertEquals("java.lang.String", objectType1.getClassName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("lshl", 136);
      ReferenceType referenceType0 = arrayType0.getFirstCommonSuperclass(arrayType0);
      assertEquals(1, referenceType0.getSize());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ObjectType objectType0 = Type.OBJECT;
      ArrayType arrayType0 = new ArrayType("a>U8{L", 139);
      ArrayType arrayType1 = new ArrayType(objectType0, (int) integer0);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(arrayType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      Integer integer0 = new Integer(1);
      ArrayType arrayType0 = new ArrayType("a>U8{L", 139);
      ArrayType arrayType1 = new ArrayType(objectType0, (int) integer0);
      boolean boolean0 = arrayType0.isAssignmentCompatibleWith(arrayType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ObjectType objectType1 = Type.OBJECT;
      boolean boolean0 = objectType0.isCastableTo(objectType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      ArrayType arrayType0 = new ArrayType(objectType0, 1);
      boolean boolean0 = objectType0.isAssignmentCompatibleWith(arrayType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayType arrayType0 = new ArrayType("a>U8{L", 139);
      // Undeclared exception!
      arrayType0.isAssignmentCompatibleWith(arrayType0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectType objectType0 = Type.THROWABLE;
      boolean boolean0 = objectType0.NULL.isAssignmentCompatibleWith(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("org.aache.bcel.generic.ReferenceType");
      boolean boolean0 = objectType0.isCastableTo(objectType0.BYTE);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      Type type0 = aRETURN0.getType();
      ArrayType arrayType0 = new ArrayType(type0, 1);
      boolean boolean0 = arrayType0.NULL.isCastableTo(arrayType0.THROWABLE);
      assertTrue(boolean0);
  }
}
