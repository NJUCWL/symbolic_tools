/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 16:27:05 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.Repository;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectType_ESTest extends ObjectType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("@oXA[3VjI1y[WnC");
      boolean boolean0 = objectType0.referencesInterface();
      assertEquals("@oXA[3VjI1y[WnC", objectType0.getClassName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) objectType0).LONG).OBJECT.subclassOf(((Type) ((org.apache.bcel.generic.Type) objectType0).LONG).CLASS);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      boolean boolean0 = objectType0.referencesClassExact();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("Dr>.N9y_*");
      boolean boolean0 = objectType0.referencesClass();
      assertEquals("Dr>.N9y_*", objectType0.getClassName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("yQ34y3 /7<pTz\"");
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((ClassLoader) null);
      Repository.setRepository(classLoaderRepository0);
      // Undeclared exception!
      try { 
        objectType0.subclassOf(objectType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.ClassLoaderRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.subclassOf((ObjectType) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      ObjectType objectType1 = ObjectType.getInstance("bdx'WAb[e");
      try { 
        objectType0.subclassOf(objectType1);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class bdx'WAb[e: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: bdx'WAb[e.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("WA3XVWCl\"h?rh{e");
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        objectType0.referencesInterfaceExact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("2&;(H8ug?eHIz<h iuw");
      try { 
        objectType0.referencesInterfaceExact();
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 2&;(H8ug?eHIz<h iuw: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 2&;(H8ug?eHIz<h iuw.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("J:_(T!;]IuL;},\"vt");
      Repository.setRepository((org.apache.bcel.util.Repository) null);
      // Undeclared exception!
      try { 
        objectType0.referencesInterface();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.referencesInterface();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      Repository.setRepository(memorySensitiveClassPathRepository0);
      // Undeclared exception!
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Repository.setRepository(syntheticRepository0);
      // Undeclared exception!
      try { 
        objectType0.STRINGBUFFER.referencesClass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("");
      // Undeclared exception!
      try { 
        objectType0.referencesClass();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ObjectType.getInstance((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectType objectType0 = Type.STRING;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      Repository.setRepository(syntheticRepository0);
      // Undeclared exception!
      try { 
        objectType0.accessibleTo(objectType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectType objectType0 = null;
      try {
        objectType0 = new ObjectType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.ObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      boolean boolean0 = ((Type) ((org.apache.bcel.generic.Type) objectType0).CHAR).THROWABLE.referencesInterfaceExact();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.equals(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY();
      ObjectType objectType0 = Type.CLASS;
      boolean boolean0 = objectType0.equals(aNEWARRAY0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      String string0 = objectType0.getClassName();
      assertEquals("java.lang.Class", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("Dr>.N9y_*");
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class Dr>.N9y_*: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: Dr>/N9y_*.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      // Undeclared exception!
      try { 
        objectType0.referencesClassExact();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.accessibleTo(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.STRINGBUFFER.subclassOf(objectType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectType objectType0 = Type.STRINGBUFFER;
      boolean boolean0 = objectType0.referencesInterface();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      boolean boolean0 = objectType0.referencesClass();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectType objectType0 = Type.CLASS;
      objectType0.hashCode();
  }
}
