/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 18:48:14 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.Visitor;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GOTO_W_ESTest extends GOTO_W_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      byte[] byteArray0 = new byte[4];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      gOTO_W0.initFromFile(byteSequence0, false);
      assertEquals(5, gOTO_W0.getLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("=P$rb3n5ClPzoF:|", false);
      InstructionList instructionList0 = new InstructionList();
      BranchHandle branchHandle0 = instructionList0.insert((BranchInstruction) gOTO_W0);
      gOTO_W0.setTarget(branchHandle0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      gOTO_W0.dump(dataOutputStream0);
      assertEquals(1, gOTO_W0.getLength());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      byte[] byteArray0 = new byte[1];
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      try { 
        gOTO_W0.initFromFile(byteSequence0, false);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      MockFile mockFile0 = new MockFile("s=-<", "s=-<");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        gOTO_W0.dump(dataOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      // Undeclared exception!
      try { 
        gOTO_W0.accept((Visitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.GOTO_W", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        gOTO_W0.dump(dataOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Target of goto_w[200](5) is invalid null handle
         //
         verifyException("org.apache.bcel.generic.BranchInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      gOTO_W0.accept(instConstraintVisitor0);
      assertEquals(1, gOTO_W0.getLength());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GOTO_W gOTO_W0 = new GOTO_W();
      // Undeclared exception!
      try { 
        gOTO_W0.initFromFile((ByteSequence) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.GOTO_W", e);
      }
  }
}
