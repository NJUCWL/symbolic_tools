/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 15:19:52 GMT 2021
 */

package org.apache.bcel.generic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IfInstruction;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.verifier.structurals.ExecutionVisitor;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IFNONNULL_ESTest extends IFNONNULL_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      LocalVariables localVariables0 = new LocalVariables(3815);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3815, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      executionVisitor0.setFrame(frame0);
      iFNONNULL0.accept(executionVisitor0);
      assertEquals(0, iFNONNULL0.getIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      ExecutionVisitor executionVisitor0 = new ExecutionVisitor();
      // Undeclared exception!
      try { 
        iFNONNULL0.accept(executionVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.ExecutionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      F2L f2L0 = new F2L();
      InstructionList instructionList0 = new InstructionList(f2L0);
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) f2L0);
      IFNONNULL iFNONNULL0 = new IFNONNULL(instructionHandle0);
      assertEquals(3, iFNONNULL0.getLength());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        iFNONNULL0.accept(instConstraintVisitor0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.Const", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IFNONNULL iFNONNULL0 = new IFNONNULL();
      IfInstruction ifInstruction0 = iFNONNULL0.negate();
      assertEquals(3, ifInstruction0.getLength());
  }
}
