/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 19:32:25 GMT 2021
 */

package org.apache.bcel.verifier.exc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.verifier.exc.AssertionViolatedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AssertionViolatedException_ESTest extends AssertionViolatedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        AssertionViolatedException.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // FOUND:
         // \tINTERNAL ERROR: Oops!
         // Exiting!!
         //
         verifyException("org.apache.bcel.verifier.exc.AssertionViolatedException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException((String) null, mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException("");
      String string0 = assertionViolatedException0.getMessage();
      assertEquals("INTERNAL ERROR: ", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException();
      assertionViolatedException0.extendMessage("", "");
      String string0 = assertionViolatedException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException();
      assertionViolatedException0.extendMessage((String) null, (String) null);
      assertEquals("", assertionViolatedException0.getMessage());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException();
      String string0 = assertionViolatedException0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AssertionViolatedException assertionViolatedException0 = new AssertionViolatedException("");
      assertionViolatedException0.extendMessage("", "INTERNAL ERROR: ");
      assertEquals("INTERNAL ERROR: INTERNAL ERROR: ", assertionViolatedException0.getMessage());
  }
}
