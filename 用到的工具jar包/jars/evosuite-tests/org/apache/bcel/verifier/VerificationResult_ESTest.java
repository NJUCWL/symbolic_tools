/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 19:17:40 GMT 2021
 */

package org.apache.bcel.verifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.verifier.VerificationResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VerificationResult_ESTest extends VerificationResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(995, (String) null);
      String string0 = verificationResult0.toString();
      assertEquals("\nnull\n", string0);
      assertEquals(995, verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult((-2495), (String) null);
      String string0 = verificationResult0.toString();
      assertEquals("\nnull\n", string0);
      assertEquals((-2495), verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_OK;
      VerificationResult verificationResult1 = new VerificationResult(0, "/YZ?aY;}");
      boolean boolean0 = verificationResult0.equals(verificationResult1);
      assertEquals(0, verificationResult1.getStatus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(1, "");
      int int0 = verificationResult0.getStatus();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult((-1), "@|8oBM]nuhbF>b");
      int int0 = verificationResult0.getStatus();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(995, (String) null);
      verificationResult0.getMessage();
      assertEquals(995, verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(1, "");
      verificationResult0.getMessage();
      assertEquals(1, verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult((-2495), (String) null);
      // Undeclared exception!
      try { 
        verificationResult0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.VerificationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_NOTYET;
      VerificationResult verificationResult1 = new VerificationResult(0, (String) null);
      // Undeclared exception!
      try { 
        verificationResult0.equals(verificationResult1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_OK;
      String string0 = verificationResult0.VR_OK.toString();
      assertEquals("VERIFIED_OK\nPassed verification.\n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(0, "/YZ?aY;}");
      String string0 = verificationResult0.toString();
      assertEquals("VERIFIED_NOTYET\n/YZ?aY;}\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(0, "/YZ?aY;}");
      VerificationResult verificationResult1 = new VerificationResult(0, "/QZ?aY;}");
      boolean boolean0 = verificationResult0.equals(verificationResult1);
      assertFalse(boolean0);
      assertEquals(0, verificationResult1.getStatus());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(1, "");
      VerificationResult verificationResult1 = new VerificationResult(2, "");
      boolean boolean0 = verificationResult0.equals(verificationResult1);
      assertFalse(verificationResult1.equals((Object)verificationResult0));
      assertEquals(2, verificationResult1.getStatus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_NOTYET;
      boolean boolean0 = verificationResult0.equals("Not yet verified.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_NOTYET;
      boolean boolean0 = verificationResult0.equals(verificationResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_OK;
      verificationResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_NOTYET;
      String string0 = verificationResult0.getMessage();
      assertEquals("Not yet verified.", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VerificationResult verificationResult0 = VerificationResult.VR_NOTYET;
      int int0 = verificationResult0.getStatus();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VerificationResult verificationResult0 = new VerificationResult(2, "+");
      String string0 = verificationResult0.toString();
      assertEquals("VERIFIED_REJECTED\n+\n", string0);
  }
}
