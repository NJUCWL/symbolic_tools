/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 18:50:33 GMT 2021
 */

package org.apache.bcel.verifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.verifier.VerificationResult;
import org.apache.bcel.verifier.Verifier;
import org.apache.bcel.verifier.statics.Pass1Verifier;
import org.apache.bcel.verifier.statics.Pass2Verifier;
import org.apache.bcel.verifier.statics.Pass3aVerifier;
import org.apache.bcel.verifier.structurals.Pass3bVerifier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PassVerifier_ESTest extends PassVerifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Verifier verifier0 = new Verifier("");
      Pass3aVerifier pass3aVerifier0 = new Pass3aVerifier(verifier0, 51);
      pass3aVerifier0.addMessage("8%&XnBv*cE QtE Q>C");
      String[] stringArray0 = pass3aVerifier0.getMessages();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Verifier verifier0 = new Verifier("");
      Pass3bVerifier pass3bVerifier0 = new Pass3bVerifier(verifier0, (-1192));
      VerificationResult verificationResult0 = pass3bVerifier0.do_verify();
      assertEquals(0, VerificationResult.VERIFIED_NOTYET);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Verifier verifier0 = new Verifier("RiM&_");
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      VerificationResult verificationResult0 = pass1Verifier0.do_verify();
      assertEquals(2, verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.verifier.PassVerifier");
      Pass3aVerifier pass3aVerifier0 = new Pass3aVerifier(verifier0, 89);
      // Undeclared exception!
      try { 
        pass3aVerifier0.verify();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // METHOD DOES NOT EXIST!
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pass2Verifier pass2Verifier0 = new Pass2Verifier((Verifier) null);
      // Undeclared exception!
      try { 
        pass2Verifier0.verify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.Pass2Verifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.verifier.PassVerifier");
      Pass3bVerifier pass3bVerifier0 = new Pass3bVerifier(verifier0, (-1364));
      // Undeclared exception!
      try { 
        pass3bVerifier0.verify();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1364
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.verifier.PassVerifier");
      Pass3bVerifier pass3bVerifier0 = new Pass3bVerifier(verifier0, 27);
      // Undeclared exception!
      try { 
        pass3bVerifier0.do_verify();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // METHOD DOES NOT EXIST!
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pass3bVerifier pass3bVerifier0 = new Pass3bVerifier((Verifier) null, (-3288));
      // Undeclared exception!
      try { 
        pass3bVerifier0.do_verify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.Pass3bVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Verifier verifier0 = new Verifier("");
      Pass2Verifier pass2Verifier0 = new Pass2Verifier(verifier0);
      VerificationResult verificationResult0 = pass2Verifier0.verify();
      assertEquals(0, VerificationResult.VERIFIED_NOTYET);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pass1Verifier pass1Verifier0 = new Pass1Verifier((Verifier) null);
      pass1Verifier0.getMessages();
      VerificationResult verificationResult0 = pass1Verifier0.verify();
      assertEquals(2, VerificationResult.VERIFIED_REJECTED);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pass3bVerifier pass3bVerifier0 = new Pass3bVerifier((Verifier) null, 171);
      // Undeclared exception!
      try { 
        pass3bVerifier0.getMessages();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.Pass3bVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Verifier verifier0 = new Verifier("Dg.@`9Yr/27`51");
      Pass1Verifier pass1Verifier0 = new Pass1Verifier(verifier0);
      String[] stringArray0 = pass1Verifier0.getMessages();
      String[] stringArray1 = pass1Verifier0.getMessages();
      assertNotSame(stringArray1, stringArray0);
  }
}
