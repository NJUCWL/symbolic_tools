/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 19:23:03 GMT 2021
 */

package org.apache.bcel.verifier.statics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ReturnaddressType;
import org.apache.bcel.generic.Type;
import org.apache.bcel.verifier.statics.LocalVariableInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalVariableInfo_ESTest extends LocalVariableInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.VOID;
      localVariableInfo0.add("D[mo69?]e!", 0, 0, basicType0);
      localVariableInfo0.getType(0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      localVariableInfo0.add("", 0, 0, returnaddressType0);
      localVariableInfo0.getType(0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      BasicType basicType0 = Type.FLOAT;
      localVariableInfo0.add(" not in instruction list", 1, 1, basicType0);
      localVariableInfo0.getName(1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      localVariableInfo0.add("", 23, 2578, returnaddressType0);
      localVariableInfo0.getName(2578);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      // Undeclared exception!
      try { 
        localVariableInfo0.add("7b,3,(n=p(KID", 176, 176, (Type) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getName(2578);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      localVariableInfo0.getType((-1799));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      localVariableInfo0.add("", 23, 2578, returnaddressType0);
      localVariableInfo0.add("", 23, 0, returnaddressType0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      IINC iINC0 = new IINC(0, 0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = iINC0.getType(constantPoolGen0);
      localVariableInfo0.add("0$=Ng-", 0, 2287, type0);
      try { 
        localVariableInfo0.add((String) null, 0, 0, type0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '0' a local variable has two different names: '0$=Ng-' and 'null'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LocalVariableInfo localVariableInfo0 = new LocalVariableInfo();
      ALOAD aLOAD0 = new ALOAD(0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Type type0 = aLOAD0.getType(constantPoolGen0);
      localVariableInfo0.add("' and '", 0, 0, type0);
      try { 
        localVariableInfo0.add("' and '", 0, 0, (Type) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // At bytecode offset '0' a local variable has two different types: 'java.lang.Object' and 'null'.
         //
         verifyException("org.apache.bcel.verifier.statics.LocalVariableInfo", e);
      }
  }
}
