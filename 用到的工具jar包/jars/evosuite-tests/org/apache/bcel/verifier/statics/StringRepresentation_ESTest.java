/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 19:24:24 GMT 2021
 */

package org.apache.bcel.verifier.statics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.classfile.AnnotationDefault;
import org.apache.bcel.classfile.AnnotationEntry;
import org.apache.bcel.classfile.Annotations;
import org.apache.bcel.classfile.Attribute;
import org.apache.bcel.classfile.BootstrapMethod;
import org.apache.bcel.classfile.BootstrapMethods;
import org.apache.bcel.classfile.ClassElementValue;
import org.apache.bcel.classfile.Code;
import org.apache.bcel.classfile.CodeException;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantClass;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantFieldref;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInterfaceMethodref;
import org.apache.bcel.classfile.ConstantInvokeDynamic;
import org.apache.bcel.classfile.ConstantLong;
import org.apache.bcel.classfile.ConstantMethodHandle;
import org.apache.bcel.classfile.ConstantMethodType;
import org.apache.bcel.classfile.ConstantMethodref;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantString;
import org.apache.bcel.classfile.ConstantUtf8;
import org.apache.bcel.classfile.ConstantValue;
import org.apache.bcel.classfile.Deprecated;
import org.apache.bcel.classfile.EnclosingMethod;
import org.apache.bcel.classfile.ExceptionTable;
import org.apache.bcel.classfile.Field;
import org.apache.bcel.classfile.InnerClass;
import org.apache.bcel.classfile.InnerClasses;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.LineNumber;
import org.apache.bcel.classfile.LineNumberTable;
import org.apache.bcel.classfile.LocalVariable;
import org.apache.bcel.classfile.LocalVariableTable;
import org.apache.bcel.classfile.LocalVariableTypeTable;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.classfile.MethodParameters;
import org.apache.bcel.classfile.Node;
import org.apache.bcel.classfile.ParameterAnnotationEntry;
import org.apache.bcel.classfile.ParameterAnnotations;
import org.apache.bcel.classfile.Signature;
import org.apache.bcel.classfile.SourceFile;
import org.apache.bcel.classfile.StackMap;
import org.apache.bcel.classfile.StackMapEntry;
import org.apache.bcel.classfile.StackMapType;
import org.apache.bcel.classfile.Synthetic;
import org.apache.bcel.classfile.Unknown;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.verifier.statics.StringRepresentation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringRepresentation_ESTest extends StringRepresentation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InnerClass[] innerClassArray0 = new InnerClass[3];
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      InnerClasses innerClasses0 = new InnerClasses(0, 0, innerClassArray0, constantPool0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClasses0);
      stringRepresentation0.visitInnerClasses(innerClasses0);
      assertEquals((byte)6, innerClasses0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(0, 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantNameAndType0);
      Constant[] constantArray0 = new Constant[8];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantValue constantValue0 = new ConstantValue(0, 0, 0, constantPool0);
      stringRepresentation0.visitConstantValue(constantValue0);
      assertEquals((byte)1, constantValue0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-2), (-2), (-2), (-3850));
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getInstance("Xn%W<)QT|-ux*P<#qiV");
      stringRepresentation0.visitConstantUtf8(constantUtf8_0);
      assertEquals((byte)1, constantUtf8_0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-2), (-2), (-2), (-3839));
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      ConstantMethodHandle constantMethodHandle0 = new ConstantMethodHandle((-1), 0);
      stringRepresentation0.visitConstantMethodHandle(constantMethodHandle0);
      assertEquals((byte)15, constantMethodHandle0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref((-13), 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      ConstantLong constantLong0 = new ConstantLong(2);
      stringRepresentation0.visitConstantLong(constantLong0);
      assertEquals(2L, constantLong0.getBytes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConstantValue constantValue0 = new ConstantValue(1820, 0, 0, (ConstantPool) null);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantValue0);
      ConstantInvokeDynamic constantInvokeDynamic0 = new ConstantInvokeDynamic(1820, 3360);
      stringRepresentation0.visitConstantInvokeDynamic(constantInvokeDynamic0);
      assertEquals(1820, constantInvokeDynamic0.getClassIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(2020, 2020, 2020, 2020);
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      BootstrapMethod[] bootstrapMethodArray0 = new BootstrapMethod[8];
      Constant[] constantArray0 = new Constant[6];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      BootstrapMethods bootstrapMethods0 = new BootstrapMethods(2020, 2020, bootstrapMethodArray0, constantPool0);
      stringRepresentation0.visitBootstrapMethods(bootstrapMethods0);
      assertEquals((byte)20, bootstrapMethods0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CodeException codeException0 = new CodeException(2258, 1997, 2258, 2258);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      ClassElementValue classElementValue0 = new ClassElementValue(2258, 1997, (ConstantPool) null);
      AnnotationDefault annotationDefault0 = new AnnotationDefault(1997, 1, classElementValue0, (ConstantPool) null);
      stringRepresentation0.visitAnnotationDefault(annotationDefault0);
      assertEquals((byte)16, annotationDefault0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConstantDouble constantDouble0 = new ConstantDouble(222.4862);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantDouble0);
      StackMapType[] stackMapTypeArray0 = new StackMapType[0];
      StackMapEntry stackMapEntry0 = new StackMapEntry(0, 531, stackMapTypeArray0, stackMapTypeArray0, (ConstantPool) null);
      stringRepresentation0.visitStackMapEntry(stackMapEntry0);
      assertEquals(0, stackMapEntry0.getFrameType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref(0, 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      Constant[] constantArray0 = new Constant[3];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      byte[] byteArray0 = new byte[3];
      Deprecated deprecated0 = new Deprecated(0, 975, byteArray0, constantPool0);
      stringRepresentation0.visitDeprecated(deprecated0);
      assertEquals(0, deprecated0.getNameIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType((-1177), 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantNameAndType0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitSynthetic((Synthetic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(0, 264);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInterfaceMethodref0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitStackMap((StackMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InnerClass[] innerClassArray0 = new InnerClass[3];
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      InnerClasses innerClasses0 = new InnerClasses(0, 0, innerClassArray0, constantPool0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClasses0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitSourceFile((SourceFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitSignature((Signature) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-335));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodType0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitParameterAnnotationEntry((ParameterAnnotationEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-2889));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodType0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitMethod((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getCachedInstance(">");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitLocalVariableTable((LocalVariableTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-2), (-2), (-2), (-3850));
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitLineNumberTable((LineNumberTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConstantFloat constantFloat0 = new ConstantFloat(2310.9065F);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFloat0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitLineNumber((LineNumber) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref(3264, (-1774));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitExceptionTable((ExceptionTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass(0, 0, 184, 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitEnclosingMethod((EnclosingMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConstantMethodref constantMethodref0 = new ConstantMethodref(0, 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodref0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantString((ConstantString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConstantInteger constantInteger0 = new ConstantInteger((-64));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInteger0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantNameAndType((ConstantNameAndType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConstantInvokeDynamic constantInvokeDynamic0 = new ConstantInvokeDynamic(1743, 1743);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInvokeDynamic0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantMethodref((ConstantMethodref) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantInterfaceMethodref((ConstantInterfaceMethodref) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(207, 207);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInterfaceMethodref0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitCodeException((CodeException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringRepresentation stringRepresentation0 = null;
      try {
        stringRepresentation0 = new StringRepresentation((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConstantInteger constantInteger0 = new ConstantInteger((-7));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInteger0);
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      stringRepresentation0.visitConstantPool(constantPool0);
      assertEquals(0, constantPool0.getLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CodeException codeException0 = new CodeException((-2451), (-2451), (-421), 1555);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      LineNumber lineNumber0 = new LineNumber((-2451), 1555);
      stringRepresentation0.visitLineNumber(lineNumber0);
      assertEquals(63085, lineNumber0.getStartPC());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref((-13), 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      stringRepresentation0.visitConstantFieldref(constantFieldref0);
      assertEquals((byte)9, constantFieldref0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CodeException codeException0 = new CodeException(146, 209, 146, 1575);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantLong((ConstantLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BootstrapMethod[] bootstrapMethodArray0 = new BootstrapMethod[8];
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      BootstrapMethods bootstrapMethods0 = new BootstrapMethods((-3291), 174, bootstrapMethodArray0, constantPool0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(bootstrapMethods0);
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType((-3291), (-3291));
      stringRepresentation0.visitConstantNameAndType(constantNameAndType0);
      assertEquals((-3291), constantNameAndType0.getSignatureIndex());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      Synthetic synthetic0 = new Synthetic((-1426), (-1426), byteArray0, constantPool0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(synthetic0);
      InnerClass innerClass0 = new InnerClass((byte)0, (byte) (-107), (byte)0, (-3906));
      stringRepresentation0.visitInnerClass(innerClass0);
      assertEquals(0, innerClass0.getInnerNameIndex());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CodeException codeException0 = new CodeException((-1936), (-1936), 77, 77);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantValue((ConstantValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Constant[] constantArray0 = new Constant[9];
      ConstantFieldref constantFieldref0 = new ConstantFieldref(699, 699);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      LocalVariable localVariable0 = new LocalVariable((-555), 699, 0, 699, 128, constantPool0);
      stringRepresentation0.visitLocalVariable(localVariable0);
      assertEquals(699, localVariable0.getLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConstantFloat constantFloat0 = new ConstantFloat(1133.5F);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFloat0);
      ConstantString constantString0 = new ConstantString((-3282));
      stringRepresentation0.visitConstantString(constantString0);
      assertEquals((-3282), constantString0.getStringIndex());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantInvokeDynamic((ConstantInvokeDynamic) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref((-13), 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      ConstantMethodType constantMethodType0 = new ConstantMethodType(0);
      stringRepresentation0.visitConstantMethodType(constantMethodType0);
      assertEquals((byte)16, constantMethodType0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref((-13), 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      StackMapEntry[] stackMapEntryArray0 = new StackMapEntry[3];
      Constant[] constantArray0 = new Constant[4];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      StackMap stackMap0 = new StackMap((-13), (-13), stackMapEntryArray0, constantPool0);
      stringRepresentation0.visitStackMap(stackMap0);
      assertEquals((-13), stackMap0.getLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(javaClass0);
      stringRepresentation0.visitJavaClass(javaClass0);
      assertFalse(javaClass0.isVarArgs());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-335));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodType0);
      Constant[] constantArray0 = new Constant[5];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      byte[] byteArray0 = new byte[3];
      Synthetic synthetic0 = new Synthetic(237, (-1783), byteArray0, constantPool0);
      stringRepresentation0.visitSynthetic(synthetic0);
      assertEquals((-1783), synthetic0.getLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConstantString constantString0 = new ConstantString(91);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantString0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantUtf8((ConstantUtf8) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      String string0 = stringRepresentation0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(0, 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantNameAndType0);
      Constant[] constantArray0 = new Constant[8];
      int[] intArray0 = new int[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ExceptionTable exceptionTable0 = new ExceptionTable(0, 454, intArray0, constantPool0);
      stringRepresentation0.visitExceptionTable(exceptionTable0);
      assertEquals(0, exceptionTable0.getNumberOfExceptions());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-335));
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodType0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitAnnotation((Annotations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CodeException codeException0 = new CodeException((-2451), (-2451), (-421), 1555);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      Constant[] constantArray0 = new Constant[9];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      AnnotationEntry annotationEntry0 = new AnnotationEntry(222, constantPool0, false);
      stringRepresentation0.visitAnnotationEntry(annotationEntry0);
      assertEquals(222, annotationEntry0.getAnnotationTypeIndex());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(0, 0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantNameAndType0);
      ParameterAnnotationEntry parameterAnnotationEntry0 = mock(ParameterAnnotationEntry.class, new ViolatedAssumptionAnswer());
      stringRepresentation0.visitParameterAnnotationEntry(parameterAnnotationEntry0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      ConstantFloat constantFloat0 = new ConstantFloat(1.0F);
      stringRepresentation0.visitConstantFloat(constantFloat0);
      assertEquals((byte)4, constantFloat0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-586), (-586), 177, (-586));
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      EnclosingMethod enclosingMethod0 = mock(EnclosingMethod.class, new ViolatedAssumptionAnswer());
      stringRepresentation0.visitEnclosingMethod(enclosingMethod0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      SourceFile sourceFile0 = new SourceFile(2664, 2664, 568, constantPool0);
      stringRepresentation0.visitSourceFile(sourceFile0);
      assertEquals((byte)0, sourceFile0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ConstantInvokeDynamic constantInvokeDynamic0 = new ConstantInvokeDynamic(1743, 1743);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantInvokeDynamic0);
      CodeException codeException0 = new CodeException(1601, 1, 1, (-1));
      stringRepresentation0.visitCodeException(codeException0);
      assertEquals(1, codeException0.getEndPC());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConstantValue constantValue0 = new ConstantValue(1820, 0, 0, (ConstantPool) null);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantValue0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantMethodHandle((ConstantMethodHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LineNumber lineNumber0 = new LineNumber(159, 159);
      StringRepresentation stringRepresentation0 = new StringRepresentation(lineNumber0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitAnnotationDefault((AnnotationDefault) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getCachedInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      Method method0 = new Method();
      stringRepresentation0.visitMethod(method0);
      assertFalse(method0.isSynchronized());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitDeprecated((Deprecated) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getCachedInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref((-1629), (-1629));
      stringRepresentation0.visitConstantInterfaceMethodref(constantInterfaceMethodref0);
      assertEquals((-1629), constantInterfaceMethodref0.getClassIndex());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(1, 1);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantNameAndType0);
      MethodParameters methodParameters0 = mock(MethodParameters.class, new ViolatedAssumptionAnswer());
      stringRepresentation0.visitMethodParameters(methodParameters0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getCachedInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      ConstantClass constantClass0 = new ConstantClass((-1629));
      stringRepresentation0.visitConstantClass(constantClass0);
      assertEquals((byte)7, constantClass0.getTag());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Synthetic synthetic0 = new Synthetic(0, (-2549), byteArray0, (ConstantPool) null);
      StringRepresentation stringRepresentation0 = new StringRepresentation(synthetic0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitConstantPool((ConstantPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ConstantString constantString0 = new ConstantString(3849);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantString0);
      Attribute[] attributeArray0 = new Attribute[0];
      Constant[] constantArray0 = new Constant[5];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      Field field0 = new Field((-920), 3849, (-920), attributeArray0, constantPool0);
      stringRepresentation0.visitField(field0);
      assertTrue(field0.isVolatile());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(javaClass0);
      ConstantMethodref constantMethodref0 = new ConstantMethodref((-2570), (byte)1);
      stringRepresentation0.visitConstantMethodref(constantMethodref0);
      assertEquals(1, constantMethodref0.getNameAndTypeIndex());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CodeException codeException0 = new CodeException((-2451), (-2451), (-421), 1555);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitBootstrapMethods((BootstrapMethods) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      InnerClass innerClass0 = new InnerClass((-2), (-2), (-2), (-3850));
      StringRepresentation stringRepresentation0 = new StringRepresentation(innerClass0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitJavaClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Constant[] constantArray0 = new Constant[1];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantPool0);
      LineNumber[] lineNumberArray0 = new LineNumber[7];
      LineNumberTable lineNumberTable0 = new LineNumberTable(144, (-1268), lineNumberArray0, constantPool0);
      stringRepresentation0.visitLineNumberTable(lineNumberTable0);
      assertEquals((-1268), lineNumberTable0.getLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConstantString constantString0 = new ConstantString(3849);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantString0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitUnknown((Unknown) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref(0, 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      ConstantInteger constantInteger0 = new ConstantInteger(0);
      stringRepresentation0.visitConstantInteger(constantInteger0);
      assertEquals(0, constantInteger0.getBytes());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ConstantUtf8 constantUtf8_0 = ConstantUtf8.getCachedInstance("");
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantUtf8_0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitParameterAnnotation((ParameterAnnotations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(javaClass0);
      LocalVariable[] localVariableArray0 = new LocalVariable[3];
      Constant[] constantArray0 = new Constant[5];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      LocalVariableTable localVariableTable0 = new LocalVariableTable(0, (-1580), localVariableArray0, constantPool0);
      stringRepresentation0.visitLocalVariableTable(localVariableTable0);
      assertEquals((-1580), localVariableTable0.getLength());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Constant[] constantArray0 = new Constant[6];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      LocalVariable localVariable0 = new LocalVariable((-516), (-1096), 1, (-4850), (-1096), constantPool0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(localVariable0);
      LocalVariable[] localVariableArray0 = new LocalVariable[0];
      LocalVariableTypeTable localVariableTypeTable0 = new LocalVariableTypeTable((-516), (-404), localVariableArray0, constantPool0);
      stringRepresentation0.visitLocalVariableTypeTable(localVariableTypeTable0);
      assertEquals((-404), localVariableTypeTable0.getLength());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ConstantFieldref constantFieldref0 = new ConstantFieldref(0, 2);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantFieldref0);
      stringRepresentation0.visitCode((Code) null);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ConstantMethodType constantMethodType0 = new ConstantMethodType(0);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantMethodType0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitInnerClasses((InnerClasses) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ConstantValue constantValue0 = new ConstantValue(1820, 0, 0, (ConstantPool) null);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantValue0);
      // Undeclared exception!
      try { 
        stringRepresentation0.visitStackMapEntry((StackMapEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.statics.StringRepresentation", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CodeException codeException0 = new CodeException((-2451), (-2451), (-421), 1555);
      StringRepresentation stringRepresentation0 = new StringRepresentation(codeException0);
      ConstantDouble constantDouble0 = new ConstantDouble(0.0);
      stringRepresentation0.visitConstantDouble(constantDouble0);
      assertEquals(0.0, constantDouble0.getBytes(), 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ConstantLong constantLong0 = new ConstantLong(1857L);
      StringRepresentation stringRepresentation0 = new StringRepresentation(constantLong0);
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      Signature signature0 = new Signature(2664, (-1), 568, constantPool0);
      stringRepresentation0.visitSignature(signature0);
      assertEquals(2664, signature0.getNameIndex());
  }
}
