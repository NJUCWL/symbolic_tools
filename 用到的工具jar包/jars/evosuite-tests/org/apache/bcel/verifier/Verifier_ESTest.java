/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 19:15:29 GMT 2021
 */

package org.apache.bcel.verifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.Repository;
import org.apache.bcel.util.SyntheticRepository;
import org.apache.bcel.verifier.VerificationResult;
import org.apache.bcel.verifier.Verifier;
import org.apache.bcel.verifier.statics.Pass3aVerifier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Verifier_ESTest extends Verifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "java.lang.Cloneable";
      Verifier verifier0 = new Verifier("java.lang.Cloneable");
      String[] stringArray0 = verifier0.getMessages();
      verifier0.doPass1();
      Verifier.main(stringArray0);
      // Undeclared exception!
      try { 
        verifier0.doPass3a(2862);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // METHOD DOES NOT EXIST!
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Dne&TfL;qpdP!=A[g";
      stringArray0[1] = "org.apache.bcel.generic.GETSTATIC";
      stringArray0[2] = "JustIce by Enver Haase, (C) 2001-2002.\n<http://bcel.sourceforge.net>\n<http://commons.apache.org/bcel>\n";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "#zqFB}jEq[rO:!";
      stringArray0[6] = "v8 rgI:z/'!kW'laz";
      stringArray0[7] = "juJ";
      // Undeclared exception!
      Verifier.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.verifier.Verifier");
      // Undeclared exception!
      try { 
        verifier0.doPass3a((-3316));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3316
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Verifier verifier0 = new Verifier("java.lang.Double");
      String[] stringArray0 = verifier0.getMessages();
      verifier0.getMessages();
      verifier0.flush();
      verifier0.doPass3a(0);
      verifier0.flush();
      verifier0.doPass2();
      org.apache.bcel.Repository.setRepository((Repository) null);
      verifier0.doPass2();
      verifier0.doPass1();
      Verifier.main(stringArray0);
      verifier0.doPass2();
      // Undeclared exception!
      try { 
        verifier0.doPass3b(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?_{`.w'b;";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "wx!4$FkDi]dY";
      stringArray0[4] = "Warnings:";
      stringArray0[5] = "org.apache.bcel.classfile.ConstantInteger";
      stringArray0[6] = "\u0007/";
      Verifier.main(stringArray0);
      Verifier verifier0 = new Verifier("org.apache.bcel.classfile.ConstantInteger");
      verifier0.getMessages();
      verifier0.doPass1();
      verifier0.flush();
      // Undeclared exception!
      try { 
        verifier0.doPass3b((-2052));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2052
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.generic.JsrInstruction");
      // Undeclared exception!
      try { 
        verifier0.doPass3b(229);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // METHOD DOES NOT EXIST!
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "org.apache.bcel.generic.FCMPL";
      Verifier verifier0 = new Verifier("org.apache.bcel.generic.FCMPL");
      verifier0.getClassName();
      verifier0.flush();
      verifier0.doPass3a(0);
      verifier0.doPass1();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.bcel.generic.FCMPL";
      stringArray0[1] = "org.apache.bcel.generic.FCMPL";
      stringArray0[2] = "org.apache.bcel.generic.FCMPL";
      stringArray0[3] = "org.apache.bcel.generic.FCMPL";
      stringArray0[4] = "?_^*i";
      stringArray0[5] = "";
      stringArray0[6] = "org.apache.bcel.generic.FCMPL";
      // Undeclared exception!
      try { 
        Verifier.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Some RuntimeException occured while verify()ing class 'org.apache.bcel.generic.FCMPL', method 'public void <init>()'. Original RuntimeException's stack trace:
         // ---
         // <evosuite>.<evosuite>(<evosuite>)
         // <evosuite>.<evosuite>(<evosuite>)
         // <evosuite>.<evosuite>(<evosuite>)
         // ---
         //
         verifyException("org.apache.bcel.verifier.structurals.Pass3bVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_Z";
      stringArray0[1] = "";
      stringArray0[2] = "org.apache.bcel.classfile.StackMapType";
      stringArray0[3] = "";
      stringArray0[4] = "B(L[0Uq3,p^G:>eR";
      Verifier.main(stringArray0);
      Verifier verifier0 = new Verifier("");
      ClassPath classPath0 = new ClassPath("");
      ClassPath classPath1 = new ClassPath(classPath0, "");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath1);
      Class<Pass3aVerifier> class0 = Pass3aVerifier.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      Repository repository0 = javaClass1.getRepository();
      org.apache.bcel.Repository.setRepository(repository0);
      verifier0.doPass2();
      verifier0.getClassName();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      Verifier.main(stringArray1);
      verifier0.doPass1();
      verifier0.doPass2();
      verifier0.doPass3b(0);
      verifier0.doPass2();
      Verifier.main(stringArray0);
      verifier0.doPass2();
      Verifier.main(stringArray0);
      verifier0.doPass1();
      // Undeclared exception!
      Verifier.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Verifier verifier0 = new Verifier("org.apache.bcel.classfile.InnerClasses");
      verifier0.doPass1();
      String[] stringArray0 = verifier0.getMessages();
      verifier0.doPass3a(0);
      verifier0.doPass3b(0);
      verifier0.doPass1();
      Verifier.main(stringArray0);
      verifier0.doPass3b(0);
      verifier0.getClassName();
      verifier0.getMessages();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "org.apache.bcel.verifier.Verifier";
      Verifier verifier0 = new Verifier("org.apache.bcel.verifier.Verifier");
      verifier0.getMessages();
      // Undeclared exception!
      try { 
        Verifier.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.Verifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = ")<9#FPKA'IL|r\"^Ba";
      stringArray0[1] = ".class";
      stringArray0[2] = "xBP62u4\"@g";
      stringArray0[3] = "";
      stringArray0[4] = "RuntimeVisibleParameterAnnotations";
      stringArray0[5] = ",d}C =;";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "The value at the stack next-to-top is not of size '1', but of size '";
      Verifier.main(stringArray0);
      Verifier verifier0 = new Verifier("D=L5Z~");
      verifier0.doPass3a(0);
      verifier0.doPass3b(2);
      verifier0.doPass1();
      verifier0.doPass2();
      verifier0.doPass3b(1);
      verifier0.doPass3a(0);
      verifier0.doPass3a((-2549));
      Verifier.main(stringArray0);
      verifier0.doPass3a(120);
      VerificationResult verificationResult0 = verifier0.doPass2();
      assertEquals(0, verificationResult0.getStatus());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Verifier verifier0 = new Verifier("");
      verifier0.flush();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      VerificationResult verificationResult0 = verifier0.doPass2();
      classLoaderRepository0.clear();
      org.apache.bcel.Repository.setRepository(classLoaderRepository0);
      verifier0.doPass3a(0);
      verifier0.doPass2();
      verifier0.flush();
      String[] stringArray0 = verifier0.getMessages();
      Verifier.main(stringArray0);
      VerificationResult verificationResult1 = verifier0.doPass3b(2);
      assertSame(verificationResult1, verificationResult0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Verifier verifier0 = new Verifier("Pass 3a, method ");
      verifier0.doPass2();
      verifier0.flush();
      org.apache.bcel.Repository.setRepository((Repository) null);
      verifier0.doPass3b((-3887));
      verifier0.doPass1();
      verifier0.doPass1();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Pass 3a, method ";
      // Undeclared exception!
      try { 
        Verifier.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.Repository", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Verifier verifier0 = new Verifier("Now verifying: ");
      assertEquals("Now verifying: ", verifier0.getClassName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Verifier verifier0 = new Verifier("");
      verifier0.doPass1();
      verifier0.doPass1();
      verifier0.getMessages();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      verifier0.flush();
      verifier0.flush();
      verifier0.doPass2();
      Verifier.main(stringArray0);
      verifier0.doPass2();
      verifier0.doPass2();
      verifier0.doPass1();
      verifier0.doPass3b(0);
      String[] stringArray1 = verifier0.getMessages();
      Verifier.main(stringArray1);
      verifier0.doPass2();
      verifier0.getMessages();
      verifier0.doPass2();
      verifier0.doPass3b(1);
      verifier0.getMessages();
      verifier0.doPass1();
      verifier0.getClassName();
      String string0 = verifier0.getClassName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Verifier verifier0 = new Verifier("ll~");
      verifier0.getMessages();
      VerificationResult verificationResult0 = verifier0.doPass1();
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      ClassPath classPath1 = new ClassPath(classPath0, "");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath1);
      org.apache.bcel.Repository.setRepository(syntheticRepository0);
      verifier0.doPass3a(2094);
      verifier0.getClassName();
      VerificationResult verificationResult1 = verifier0.doPass2();
      assertFalse(verificationResult1.equals((Object)verificationResult0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Verifier verifier0 = new Verifier((String) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      verifier0.getMessages();
      verifier0.getMessages();
      ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      classLoader0.clearAssertionStatus();
      classLoaderRepository0.storeClass(javaClass0);
      org.apache.bcel.Repository.setRepository(classLoaderRepository0);
      verifier0.doPass3b(0);
      verifier0.flush();
      verifier0.doPass2();
      verifier0.doPass2();
      String[] stringArray0 = verifier0.getMessages();
      verifier0.getClassName();
      Verifier.main(stringArray0);
      verifier0.doPass2();
      verifier0.doPass2();
      verifier0.getMessages();
      verifier0.doPass3a(247);
      VerificationResult verificationResult0 = verifier0.doPass3b(213);
      verifier0.flush();
      verifier0.doPass2();
      verifier0.getMessages();
      verifier0.doPass1();
      verifier0.doPass1();
      verifier0.doPass1();
      verifier0.doPass2();
      VerificationResult verificationResult1 = verifier0.doPass3a(1);
      assertSame(verificationResult1, verificationResult0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "HAU]tg,)BUX%f@aP4Yh";
      stringArray0[1] = "4:@f~8 goZ>7*Y";
      stringArray0[2] = " skipped";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "qzJSz8L.y1+5UnTI\f";
      stringArray0[6] = "org.apache.bcel.generic.DLOAD";
      stringArray0[7] = "U@V`";
      // Undeclared exception!
      try { 
        Verifier.main(stringArray0);
       //  fail("Expecting exception: ArrayIndexOutOfBoundsException");
       // Unstable assertion
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.bcel.verifier.statics.Pass3aVerifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "h:l";
      Verifier verifier0 = new Verifier("h:l");
      verifier0.getMessages();
      verifier0.doPass1();
      ClassPath classPath0 = new ClassPath("h:l");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      try { 
        syntheticRepository0.loadClass("6QPoed]&2++'7");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class 6QPoed]&2++'7: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: 6QPoed]&2++'7.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Verifier verifier0 = new Verifier("--u wJeHx");
      verifier0.doPass1();
      verifier0.doPass3b(125);
      verifier0.doPass1();
      verifier0.flush();
      assertEquals("--u wJeHx", verifier0.getClassName());
  }
}
