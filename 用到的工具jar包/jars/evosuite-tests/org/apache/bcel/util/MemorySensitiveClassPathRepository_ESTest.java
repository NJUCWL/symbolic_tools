/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 14:16:33 GMT 2021
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.InputStream;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MemorySensitiveClassPathRepository_ESTest extends MemorySensitiveClassPathRepository_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.classfile.ConstantUtf8$1");
      assertTrue(javaClass0.isClass());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.classfile.Utility");
      assertTrue(javaClass0.isClass());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass("java.lang.Object");
      assertFalse(javaClass0.isAbstract());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      Class<Object> class0 = Object.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      javaClass0.isVolatile(true);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.loadClass(class0);
      assertEquals("java.lang.Object", javaClass1.getFileName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      javaClass0.isSynchronized(false);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.loadClass(class0);
      assertEquals("java.lang.Integer", javaClass1.getFileName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      assertNotNull(javaClass0);
      
      javaClass0.isStatic(true);
      JavaClass javaClass1 = memorySensitiveClassPathRepository0.loadClass(class0);
      assertEquals("java.lang.String", javaClass1.getFileName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      assertFalse(javaClass0.isInterface());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      ClassPath classPath0 = syntheticRepository0.getClassPath();
      assertNull(classPath0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.findClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      assertEquals((byte)2, JavaClass.FILE);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.findClass("org.apache.bcel.classfile.Utility");
      assertNull(javaClass0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.findClass("java.lang.Object");
      assertNull(javaClass0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("~@.)='ZA!R0?|");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      // Undeclared exception!
      try { 
        syntheticRepository0.storeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance((ClassPath) null);
      // Undeclared exception!
      try { 
        syntheticRepository0.removeClass((JavaClass) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      // Undeclared exception!
      try { 
        memorySensitiveClassPathRepository0.loadClass(",");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      try { 
        memorySensitiveClassPathRepository0.loadClass(": ");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class : : org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: : .class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      // Undeclared exception!
      try { 
        syntheticRepository0.loadClass((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      JavaClass javaClass0 = syntheticRepository0.findClass("org.apache.bcel.classfile.ConstantUtf8$1");
      assertNull(javaClass0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<String> class0 = String.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      syntheticRepository0.storeClass(javaClass0);
      assertFalse(javaClass0.isVolatile());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<DataInputStream> class0 = DataInputStream.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      syntheticRepository0.removeClass(javaClass0);
      syntheticRepository0.findClass("~Tjy<");
      // Undeclared exception!
      try { 
        syntheticRepository0.loadClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      ClassPath classPath0 = syntheticRepository0.getClassPath();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaClass0.isStatic(true);
      javaClass0.setFileName((String) null);
      SyntheticRepository.getInstance(classPath0);
      syntheticRepository0.findClass("~Tjy<");
      // Undeclared exception!
      try { 
        syntheticRepository0.loadClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name null
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      // Undeclared exception!
      try { 
        memorySensitiveClassPathRepository0.loadClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassPath classPath0 = ClassPath.SYSTEM_CLASS_PATH;
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      memorySensitiveClassPathRepository0.clear();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("org.apache.bcel.util.MemorySensitiveClassPathRepository");
      syntheticRepository0.getClassPath();
      Class<DataInputStream> class0 = DataInputStream.class;
      syntheticRepository0.loadClass(class0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaClass0.isStatic(true);
      javaClass0.setFileName((String) null);
      assertEquals((byte)1, JavaClass.HEAP);
  }
}
