/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 14:22:47 GMT 2021
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.Attribute;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.Field;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.util.AttributeHTML;
import org.apache.bcel.util.ConstantHTML;
import org.apache.bcel.util.MethodHTML;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodHTML_ESTest extends MethodHTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Field[] fieldArray0 = new Field[5];
      Attribute[] attributeArray0 = new Attribute[1];
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      Field field0 = new Field(1473, (-2111), 0, attributeArray0, constantPool0);
      fieldArray0[0] = field0;
      MethodHTML methodHTML0 = null;
      try {
        methodHTML0 = new MethodHTML("", "", (Method[]) null, fieldArray0, (ConstantHTML) null, (AttributeHTML) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 0. Constant pool size is: 0
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Field[] fieldArray0 = new Field[0];
      Constant[] constantArray0 = new Constant[5];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      Method[] methodArray0 = new Method[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("_methods.html");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ConstantHTML constantHTML0 = new ConstantHTML("<illegal type>", "", "", methodArray0, constantPool0);
      AttributeHTML attributeHTML0 = new AttributeHTML("jsr_w", "", constantPool0, constantHTML0);
      MethodHTML methodHTML0 = null;
      try {
        methodHTML0 = new MethodHTML("", "", methodArray0, fieldArray0, constantHTML0, attributeHTML0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Method[] methodArray0 = new Method[0];
      Field[] fieldArray0 = new Field[0];
      Constant[] constantArray0 = new Constant[8];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantHTML constantHTML0 = new ConstantHTML("Fx", "Fx", "Fx", methodArray0, constantPool0);
      AttributeHTML attributeHTML0 = new AttributeHTML("Fx", "Fx", constantPool0, constantHTML0);
      MethodHTML methodHTML0 = new MethodHTML("Fx", "Fx", methodArray0, fieldArray0, constantHTML0, attributeHTML0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Method[] methodArray0 = new Method[0];
      Constant[] constantArray0 = new Constant[8];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantHTML constantHTML0 = new ConstantHTML("Fx", "Fx", "Fx", methodArray0, constantPool0);
      AttributeHTML attributeHTML0 = new AttributeHTML("Fx", "Fx", constantPool0, constantHTML0);
      Field[] fieldArray0 = new Field[8];
      MethodHTML methodHTML0 = null;
      try {
        methodHTML0 = new MethodHTML("Fx", "Fx", methodArray0, fieldArray0, constantHTML0, attributeHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MethodHTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Field[] fieldArray0 = new Field[0];
      Constant[] constantArray0 = new Constant[8];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      Method[] methodArray0 = new Method[1];
      ConstantHTML constantHTML0 = new ConstantHTML("", "", "", methodArray0, constantPool0);
      AttributeHTML attributeHTML0 = new AttributeHTML("", "", constantPool0, constantHTML0);
      MethodHTML methodHTML0 = null;
      try {
        methodHTML0 = new MethodHTML("", "", methodArray0, fieldArray0, constantHTML0, attributeHTML0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.MethodHTML", e);
      }
  }
}
