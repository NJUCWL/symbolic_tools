/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 14:38:09 GMT 2021
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.InputStream;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.referenceType("");
      Class2HTML.referenceType("");
      Class2HTML.referenceType("$v<4xK#D_d4;zPHGS ");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      Class2HTML.toHTML("$v<4xK#D_d4;zPHGS ");
      ClassPath classPath0 = new ClassPath("<A HREF=\"$v<4xK#D_d4;zPHGS .html\" TARGET=_top>$v<4xK#D_d4;zPHGS </A>");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      Class<InputStream> class0 = InputStream.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "<A HREF=\"$v<4xK#D_d4;zPHGS .html\" TARGET=_top>$v<4xK#D_d4;zPHGS </A>");
      Class2HTML.referenceClass((byte)3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Integer> class0 = Integer.class;
      java.lang.ClassLoader.getSystemClassLoader();
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "ldc_w");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("iflt");
      byte[] byteArray0 = new byte[2];
      Class2HTML.referenceType("[WXlp");
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)87;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      stringArray0[0] = "iflt";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("iflt");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "iflt");
      stringArray0[0] = "iflt";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // iflt is not a Java .class file
         //
         verifyException("org.apache.bcel.classfile.ClassParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<DataInputStream> class0 = DataInputStream.class;
      classLoader0.clearAssertionStatus();
      classLoaderRepository0.clear();
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte)2;
      intArray0[1] = (int) (byte)3;
      intArray0[2] = (int) (byte)1;
      intArray0[3] = 0;
      intArray0[4] = (int) (byte)2;
      intArray0[5] = (int) (byte)2;
      javaClass0.setInterfaces(intArray0);
      String string0 = "R'c";
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "R'c");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(452);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 452. Constant pool size is: 159
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class2HTML.referenceType("-d");
      Class2HTML.referenceType("-d");
      String string0 = null;
      // Undeclared exception!
      try { 
        Class2HTML.referenceType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "nJK6-4mAH|,9e";
      Class2HTML.toHTML("nJK6-4mAH|,9e");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        Class2HTML.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "Tried to create the directory ";
      Class2HTML.toHTML("Tried to create the directory ");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      classLoaderRepository0.getClassPath();
      classLoader0.getParent();
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<String> class0 = String.class;
      classPathRepository0.clear();
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "Tried to create the directory ");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class2HTML.toHTML("");
      Class2HTML.toHTML("");
      Class2HTML.referenceType("");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "iconst_3";
      Class2HTML.toHTML("iconst_3");
      Class2HTML.toHTML("iconst_3");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(413);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "Bo?+[)(PG";
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML((JavaClass) null, "Bo?+[)(PG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "q]#z DX";
      stringArray0[1] = "=.21[|hcOvi^Ma3x";
      stringArray0[2] = "Class2HTML: No input files specified.";
      stringArray0[3] = "bw";
      stringArray0[4] = "xv";
      stringArray0[5] = "w";
      stringArray0[6] = "";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      Class2HTML.toHTML("org.apache.bcel.classfile.Unknown");
      Class2HTML.toHTML("org.apache.bcel.classfile.Unknown");
      Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      Class2HTML.referenceType("org.apache.bcel.classfile.Unknown");
      int int0 = 45;
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "b8;Bc mx9";
      stringArray0[1] = "byte";
      stringArray0[2] = "\n";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("ir#sKPH+gG<vy'O`");
      ClassPath classPath1 = new ClassPath(classPath0, "ir#sKPH+gG<vy'O`");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath1);
      Class<DataInputStream> class0 = DataInputStream.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "H2egXs|_Ue");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "fS(F3lQ";
      stringArray0[1] = "iconst_4";
      stringArray0[2] = "int";
      stringArray0[3] = "TA-fnNP{D%Tg&O 8";
      stringArray0[4] = ".lv";
      stringArray0[5] = "(^-2><T7/H|{o7BW}R";
      stringArray0[6] = "WqQii%6C";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "iflt";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass((-555));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = Class2HTML.referenceType("A");
      assertEquals("<A HREF=\"A.html\" TARGET=_top>A</A>", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class2HTML.toHTML(".html");
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
