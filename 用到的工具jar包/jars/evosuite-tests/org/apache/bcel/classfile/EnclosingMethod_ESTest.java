/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 20:54:11 GMT 2021
 */

package org.apache.bcel.classfile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.DescendingVisitor;
import org.apache.bcel.classfile.EmptyVisitor;
import org.apache.bcel.classfile.EnclosingMethod;
import org.apache.bcel.classfile.JavaClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnclosingMethod_ESTest extends EnclosingMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod((byte)0, (byte)0, dataInputStream0, (ConstantPool) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("H1)~|j2(=\"w:");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(objectOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      enclosingMethod0.dump(dataOutputStream0);
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
      assertEquals(29952, enclosingMethod0.getEnclosingMethodIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("isub");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      enclosingMethod0.dump(dataOutputStream0);
      assertEquals(33536, enclosingMethod0.getEnclosingClassIndex());
      assertEquals(0, enclosingMethod0.getEnclosingMethodIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, (-2068), dataInputStream0, (ConstantPool) null);
      enclosingMethod0.setEnclosingMethodIndex((byte) (-15));
      // Undeclared exception!
      try { 
        enclosingMethod0.getEnclosingMethod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.EnclosingMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      // Undeclared exception!
      try { 
        enclosingMethod0.getEnclosingClass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.EnclosingMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, 0, dataInputStream0, (ConstantPool) null);
      int int0 = enclosingMethod0.getEnclosingMethodIndex();
      assertEquals(29952, int0);
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, (-2068), dataInputStream0, (ConstantPool) null);
      enclosingMethod0.setEnclosingMethodIndex((byte) (-15));
      int int0 = enclosingMethod0.getEnclosingMethodIndex();
      assertEquals((-15), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      int int0 = enclosingMethod0.getEnclosingClassIndex();
      assertEquals(0, enclosingMethod0.getEnclosingMethodIndex());
      assertEquals(33536, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, (-2068), dataInputStream0, (ConstantPool) null);
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
      
      enclosingMethod0.setEnclosingClassIndex((-1));
      int int0 = enclosingMethod0.getEnclosingClassIndex();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, 1797, dataInputStream0, (ConstantPool) null);
      enclosingMethod0.setNameIndex((byte) (-125));
      EnclosingMethod enclosingMethod1 = (EnclosingMethod)enclosingMethod0.copy((ConstantPool) null);
      assertEquals(0, enclosingMethod1.getEnclosingClassIndex());
      assertEquals(0, enclosingMethod1.getEnclosingMethodIndex());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, 0, dataInputStream0, (ConstantPool) null);
      EnclosingMethod enclosingMethod1 = (EnclosingMethod)enclosingMethod0.copy((ConstantPool) null);
      assertEquals(0, enclosingMethod1.getEnclosingClassIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, 1797, dataInputStream0, (ConstantPool) null);
      EnclosingMethod enclosingMethod1 = (EnclosingMethod)enclosingMethod0.copy((ConstantPool) null);
      assertEquals(0, enclosingMethod1.getEnclosingClassIndex());
      assertEquals(0, enclosingMethod1.getEnclosingMethodIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, 0, dataInputStream0, (ConstantPool) null);
      // Undeclared exception!
      try { 
        enclosingMethod0.dump((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      EnclosingMethod enclosingMethod0 = null;
      try {
        enclosingMethod0 = new EnclosingMethod(0, 0, dataInputStream0, constantPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      EnclosingMethod enclosingMethod0 = null;
      try {
        enclosingMethod0 = new EnclosingMethod(193, 193, dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.skipBytes(1572);
      EnclosingMethod enclosingMethod0 = null;
      try {
        enclosingMethod0 = new EnclosingMethod(1572, (-2068), dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      assertEquals(0, enclosingMethod0.getEnclosingMethodIndex());
      
      enclosingMethod0.getEnclosingMethod();
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod((byte) (-44), (byte)117, dataInputStream0, (ConstantPool) null);
      // Undeclared exception!
      try { 
        enclosingMethod0.getEnclosingMethod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.EnclosingMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      EnclosingMethod enclosingMethod1 = (EnclosingMethod)enclosingMethod0.copy((ConstantPool) null);
      assertEquals(0, enclosingMethod1.getEnclosingClassIndex());
      assertEquals(0, enclosingMethod1.getEnclosingMethodIndex());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(1572, (-2068), dataInputStream0, (ConstantPool) null);
      EmptyVisitor emptyVisitor0 = new EmptyVisitor();
      DescendingVisitor descendingVisitor0 = new DescendingVisitor((JavaClass) null, emptyVisitor0);
      enclosingMethod0.accept(descendingVisitor0);
      assertEquals(0, enclosingMethod0.getEnclosingMethodIndex());
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      int int0 = enclosingMethod0.getEnclosingMethodIndex();
      assertEquals(0, enclosingMethod0.getEnclosingClassIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EnclosingMethod enclosingMethod0 = new EnclosingMethod(0, (-2068), dataInputStream0, (ConstantPool) null);
      int int0 = enclosingMethod0.getEnclosingClassIndex();
      assertEquals(0, int0);
      assertEquals(0, enclosingMethod0.getEnclosingMethodIndex());
  }
}
