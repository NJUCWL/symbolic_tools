/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 20:35:48 GMT 2021
 */

package org.apache.bcel.classfile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInput;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.apache.bcel.classfile.BootstrapMethod;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BootstrapMethod_ESTest extends BootstrapMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[0];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      bootstrapMethod0.getNumBootstrapArguments();
      assertEquals(0, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[0];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-2033), intArray0);
      int int0 = bootstrapMethod0.getBootstrapMethodRef();
      assertEquals((-2033), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(193, (int[]) null);
      bootstrapMethod0.getBootstrapArguments();
      assertEquals(193, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[0];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-2033), intArray0);
      bootstrapMethod0.getBootstrapArguments();
      assertEquals((-2033), bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(193, (int[]) null);
      BootstrapMethod bootstrapMethod1 = bootstrapMethod0.copy();
      assertEquals(193, bootstrapMethod1.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-2033), intArray0);
      BootstrapMethod bootstrapMethod1 = bootstrapMethod0.copy();
      assertEquals((-2033), bootstrapMethod1.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(6, (int[]) null);
      Constant[] constantArray0 = new Constant[2];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      // Undeclared exception!
      try { 
        bootstrapMethod0.toString(constantPool0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 6. Constant pool size is: 2
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[1];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(237, intArray0);
      // Undeclared exception!
      try { 
        bootstrapMethod0.toString((ConstantPool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.BootstrapMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(1963, (int[]) null);
      // Undeclared exception!
      try { 
        bootstrapMethod0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.BootstrapMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-698), (int[]) null);
      // Undeclared exception!
      try { 
        bootstrapMethod0.getNumBootstrapArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.BootstrapMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[6];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-2092), intArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        bootstrapMethod0.dump(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[3];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod((-1), intArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        bootstrapMethod0.dump(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = null;
      try {
        bootstrapMethod0 = new BootstrapMethod((BootstrapMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.BootstrapMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BootstrapMethod bootstrapMethod0 = null;
      try {
        bootstrapMethod0 = new BootstrapMethod((DataInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.classfile.BootstrapMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (byte)8);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BootstrapMethod bootstrapMethod0 = null;
      try {
        bootstrapMethod0 = new BootstrapMethod(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      BootstrapMethod bootstrapMethod0 = null;
      try {
        bootstrapMethod0 = new BootstrapMethod(dataInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BootstrapMethod bootstrapMethod0 = null;
      try {
        bootstrapMethod0 = new BootstrapMethod(dataInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      int int0 = bootstrapMethod0.getBootstrapMethodRef();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[1];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(237, intArray0);
      bootstrapMethod0.getBootstrapArguments();
      assertEquals(237, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("BootstrapMethod(0, 2, [0, 0])");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 4571);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      bootstrapMethod0.dump(dataOutputStream0);
      assertEquals(0, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      assertEquals(0, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      BootstrapMethod bootstrapMethod1 = bootstrapMethod0.copy();
      assertEquals(0, bootstrapMethod1.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      bootstrapMethod0.setBootstrapArguments(intArray0);
      assertEquals(0, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      bootstrapMethod0.setBootstrapMethodRef(59);
      int int0 = bootstrapMethod0.getBootstrapMethodRef();
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      String string0 = bootstrapMethod0.toString();
      assertEquals("BootstrapMethod(0, 2, [0, 0])", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[2];
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(0, intArray0);
      bootstrapMethod0.getNumBootstrapArguments();
      assertEquals(0, bootstrapMethod0.getBootstrapMethodRef());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BootstrapMethod bootstrapMethod0 = new BootstrapMethod(dataInputStream0);
      BootstrapMethod bootstrapMethod1 = new BootstrapMethod(bootstrapMethod0);
      assertEquals(0, bootstrapMethod1.getBootstrapMethodRef());
  }
}
