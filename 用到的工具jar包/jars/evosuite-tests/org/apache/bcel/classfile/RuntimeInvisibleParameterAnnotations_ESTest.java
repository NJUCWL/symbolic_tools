/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 21:00:47 GMT 2021
 */

package org.apache.bcel.classfile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.RuntimeInvisibleParameterAnnotations;
import org.apache.bcel.util.ClassPath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RuntimeInvisibleParameterAnnotations_ESTest extends RuntimeInvisibleParameterAnnotations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = null;
      try {
        runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations(1498, 1498, dataInputStream0, constantPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = null;
      try {
        runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations(0, 0, dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = null;
      try {
        runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations((-2706), (-2706), dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassPath classPath0 = new ClassPath((ClassPath) null, "");
      InputStream inputStream0 = classPath0.getInputStream("java.lang.Throwable");
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      RuntimeInvisibleParameterAnnotations runtimeInvisibleParameterAnnotations0 = null;
      try {
        runtimeInvisibleParameterAnnotations0 = new RuntimeInvisibleParameterAnnotations(0, 968, dataInputStream0, (ConstantPool) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected element value kind in annotation: 0
         //
         verifyException("org.apache.bcel.classfile.ElementValue", e);
      }
  }
}
